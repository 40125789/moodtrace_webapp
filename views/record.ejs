<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Record your mood - Mood Trace</title>

<!-- Bootstrap CSS -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
<link rel="stylesheet" href="/styles/style.css" type="text/css">

<!-- FontAwesome icons -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css"
    integrity="correct-fontawesome-integrity-value" crossorigin="anonymous" referrerpolicy="no-referrer" />

<!-- Flatpickr CSS -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr@4.6.9/dist/flatpickr.min.css">

<!-- Include jQuery, Popper.js, and Bootstrap JS -->
<link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"></script>

<!-- Include the latest Bootstrap Multiselect CSS and JS -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-multiselect/0.9.15/css/bootstrap-multiselect.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-multiselect/0.9.15/js/bootstrap-multiselect.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>

    <!-- Flatpickr JS -->
    <script src="https://cdn.jsdelivr.net/npm/flatpickr@4.6.9/dist/flatpickr.min.js"></script>

    <!-- Include your custom navbar script with defer -->
    
    <style>
        /* Custom styles for adjusting image placement */
        .img-container {
            display: flex;
            justify-content: flex-end;
        }

        .img-container img {
            width: 100%; /* Adjust the width as needed */
            
        }

        /* Add shadow border and style for calendar button */
        .datepicker-container,
        .timepicker-container {
            position: relative;
        }

        .datepicker-container .form-control,
        .timepicker-container .form-control {
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

        .datepicker-container .input-group-addon,
        .timepicker-container .input-group-addon {
            position: ab;
            right: 12px;
            top: 50%;
            transform: translateY(-50%);
            cursor: pointer;
        }

            
        
    </style>
</head>

<body>

    <nav class="navbar navbar-expand-lg bg-info navbar-dark">
        <div class="container">
            <a href="/" class="navbar-brand" style="font-weight: bold">Mood Trace</a>
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navmenu">
                <span class="navbar-toggler-icon"></span>
            </button>
    
            <div class="collapse navbar-collapse" id="navmenu">
                <ul class="navbar-nav">
                    <% if (isloggedin) { %>
                        <li class="nav-item">
                            <a href="/dashboard" class="nav-link"><i class="fas fa-home"></i> Home</a>
                        </li>
                        <li class="nav-item">
                            <a href="/record" class="nav-link"><i class="fas fa-book"></i> Record</a>
                        </li>
                        <li class="nav-item">
                            <a href="/history" class="nav-link"><i class="fas fa-history"></i> History</a>
                        </li>
                        <li class="nav-item">
                            <a href="/statistics" class="nav-link"><i class="fas fa-chart-line"></i> Trends</a>
                        </li>
                    <% } %>
                </ul>
    
                <!-- Conditionally render login/register or logout link based on user authentication -->
                <ul class="navbar-nav ml-auto">
                    <% if (isloggedin) { %>
                        <!-- User is logged in -->
                        <li class="nav-item">
                            <a href="/logout" class="nav-link"><i class="fa-solid fa-right-to-bracket"></i> Log out</a>
                        </li>
                    <% } else { %>
                        <!-- User is not logged in -->
                        <li class="nav-item">
                            <a href="/register" class="nav-link"><i class="fa-solid fa-user"></i> Register</a>
                        </li>
                        <li class="nav-item">
                            <a href="/login" class="nav-link"><i class="fa-solid fa-right-to-bracket"></i> Log in</a>
                        </li>
                    <% } %>
                </ul>
            </div>
        </div>
    </nav>
    <!-- Record Mood page -->
<section class="bg-light text-dark p-5 text-center text-sm-start">
    <div class="container mt-5">
        <div class="d-sm-flex">
            <div class="form-container shadow p-5"> <!-- Added styling to this div -->
                <h1>Hello <%= firstname %>! How are you feeling today?</h1>
                <p class="lead my-4" style="font-weight: 600">
                    Record your emotion levels by moving the sliders below:
                </p>

              
  <!-- Emotion Form -->
<form method="post" action="/record">

    <!-- Display Emotion Level Scale for Enjoyment -->
    <div class="mb-3">
        <label for="enjoymentLevel" class="form-label" style="font-weight: bolder; color: #ffb74d;">Enjoyment <i class="far fa-grin-beam"></i>:</label>
        <label id="enjoymentIntensityLabel" class="form-label">Emotion level:</label>
        <input type="range" class="form-range enjoyment-range" min="0" max="10" id="enjoymentLevel" name="enjoymentLevel" required>
    </div>

    <!-- Display Emotion Level Scale for Sadness -->
    <div class="mb-3">
        <label for="sadnessLevel" class="form-label" style="font-weight: bolder; color: #64b5f6;">Sadness <i class="far fa-sad-tear"></i>:</label>
        <label id="sadnessIntensityLabel" class="form-label" >Emotion level:</label>
        <input type="range" class="form-range sadness-range" min="0" max="10" id="sadnessLevel" name="sadnessLevel" required>
    </div>

    <!-- Display Emotion Level Scale for Anger -->
    <div class="mb-3">
        <label for="angerLevel" class="form-label" style="font-weight: bolder; color: #ef5350;">Anger <i class="far fa-angry"></i>:</label>
        <label id="angerIntensityLabel" class="form-label">Emotion level:</label>
        <input type="range" class="form-range anger-range" min="0" max="10" id="angerLevel" name="angerLevel" required>
    </div>

    <!-- Display Emotion Level Scale for Contempt -->
    <div class="mb-3">
        <label for="contemptLevel" class="form-label" style="font-weight: bolder; color: #a1887f;">Contempt <i class="far fa-grimace"></i>:</label>
        <label id="contemptIntensityLabel" class="form-label">Emotion level: </label>
        <input type="range" class="form-range contempt-range" min="0" max="10" id="contemptLevel" name="contemptLevel" required>
    </div>

    <!-- Display Emotion Level Scale for Disgust -->
    <div class="mb-3">
        <label for="disgustLevel" class="form-label" style="font-weight: bolder; color: #4caf50;">Disgust <i class="far fa-dizzy"></i>:</label>
        <label id="disgustIntensityLabel" class="form-label">Emotion level: </label>
        <input type="range" class="form-range disgust-range" min="0" max="10" id="disgustLevel" name="disgustLevel" required>
    </div>

    <!-- Display Emotion Level Scale for Fear -->
    <div class="mb-3">
        <label for="fearLevel" class="form-label" style="font-weight: bolder; color: #d32f2f;">Fear <i class="far fa-flushed"></i>:</label>
        <label id="fearIntensityLabel" class="form-label">Emotion level: </label>
        <input type="range" class="form-range fear-range" min="0" max="10" id="fearLevel" name="fearLevel" required>
    </div>

    <!-- Display Emotion Level Scale for Surprise -->
    <div class="mb-3">
        <label for="surpriseLevel" class="form-label" style="font-weight: bolder; color: #ffcc80;">Surprise <i class="far fa-surprise"></i>:</label>
        <label id="surpriseIntensityLabel" class="form-label">Emotion level:</label>
        <input type="range" class="form-range surprise-range" min="0" max="10" id="surpriseLevel" name="surpriseLevel" required>
    </div>

    <!-- ... (Other form elements) ... -->


  <script>
        // Attach an input event listener to update the value label dynamically for each emotion
        const enjoymentLevelInput = document.getElementById('enjoymentLevel');
        const enjoymentIntensityLabel = document.getElementById('enjoymentIntensityLabel');

        enjoymentLevelInput.addEventListener('input', function () {
            const value = enjoymentLevelInput.value;
            enjoymentIntensityLabel.textContent = `Emotion level: ${value}`;
        });

        const sadnessLevelInput = document.getElementById('sadnessLevel');
        const sadnessIntensityLabel = document.getElementById('sadnessIntensityLabel');

        sadnessLevelInput.addEventListener('input', function () {
            const value = sadnessLevelInput.value;
            sadnessIntensityLabel.textContent = `Emotion level: ${value}`;
        });

        const angerLevelInput = document.getElementById('angerLevel');
        const angerIntensityLabel= document.getElementById('angerIntensityLabel');

        angerLevelInput.addEventListener('input', function () {
            const value = angerLevelInput.value;
            angerIntensityLabel.textContent = `Emotion level: ${value}`;
        });

        const contemptLevelInput = document.getElementById('contemptLevel');
        const contemptIntensityLabel= document.getElementById('contemptIntensityLabel');

        contemptLevelInput.addEventListener('input', function () {
            const value = contemptLevelInput.value;
            contemptIntensityLabel.textContent = `Emotion level: ${value}`;
        });

        const disgustLevelInput = document.getElementById('disgustLevel');
        const disgustIntensityLabel= document.getElementById('disgustIntensityLabel');

        disgustLevelInput.addEventListener('input', function () {
            const value = disgustLevelInput.value;
            disgustIntensityLabel.textContent = `Emotion level: ${value}`;
        });

        const fearLevelInput = document.getElementById('fearLevel');
        const fearIntensityLabel= document.getElementById('fearIntensityLabel');

        fearLevelInput.addEventListener('input', function () {
            const value = fearLevelInput.value;
            fearIntensityLabel.textContent = `Emotion level: ${value}`;
        });

        const surpriseLevelInput = document.getElementById('surpriseLevel');
        const surpriseIntensityLabel= document.getElementById('surpriseIntensityLabel');

        surpriseLevelInput.addEventListener('input', function () {
            const value = surpriseLevelInput.value;
            surpriseIntensityLabel.textContent = `Emotion level: ${value}`;
        });


        
    </script>

    <!-- Emotion Level Script -->
<script>
    const emotionLevelInput = document.getElementById('emotionLevel');
    const intensityLabel = document.getElementById('intensityLabel');

    emotionLevelInput.addEventListener('input', updateLabel);

    function updateLabel() {
        const value = emotionLevelInput.value;
        intensityLabel.textContent = `Emotion level: ${value}`;
    }
</script>

<!-- Contextual Trigger Dropdown -->
<div class="mb-3">
    <label class="form-label" style="font-weight: bolder;">Contextual Trigger(s) (optional):</label>
    <select id="contextualTriggerDropdown" name="selectedContextualTriggers" class="form-control" multiple>
        <!-- Options will be populated dynamically using JavaScript -->
    </select>
    <div id="selectedContextualTriggers" style="margin-top: 5px; display: flex; flex-wrap: wrap;"></div>
    <input type="hidden" id="selectedContextualTrigger" name="selectedContextualTrigger" value="">
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Fetch predefined contextual triggers from the server and populate the dropdown
        fetch('/api/contextual-triggers') // Adjust the API endpoint accordingly
            .then(response => response.json())
            .then(data => {
                const dropdown = document.getElementById('contextualTriggerDropdown');
                data.forEach(trigger => {
                    const option = document.createElement('option');
                    option.value = trigger;
                    option.textContent = trigger;
                    dropdown.appendChild(option);
                });
            })
            .catch(error => console.error('Error fetching contextual triggers:', error));
    });

    function addSelectedTriggers() {
        const selectedTriggersDropdown = document.getElementById('contextualTriggerDropdown');
        const selectedTriggersDiv = document.getElementById('selectedContextualTriggers');
        const selectedTriggersInput = document.getElementById('selectedContextualTrigger');

        // Check if the dropdown is in focus, if yes, return
        if (document.activeElement === selectedTriggersDropdown) {
            return;
        }

        // Get selected options
        const selectedOptions = selectedTriggersDropdown.selectedOptions;

        // Clear the existing content in the div
        selectedTriggersDiv.innerHTML = '';

        // Update the hidden input with selected triggers if there are selected options
        if (selectedOptions.length > 0) {
            selectedTriggersInput.value = Array.from(selectedOptions, option => option.value).join(',');

            // Iterate through selected options and add them to the div
            for (const option of selectedOptions) {
                const triggerDiv = document.createElement('div');
                triggerDiv.textContent = option.value;
                triggerDiv.style.marginRight = '5px'; // Adjust spacing as needed
                selectedTriggersDiv.appendChild(triggerDiv);
            }
        } else {
            selectedTriggersInput.value = ''; // No selected options, clear the hidden input
        }
    }
</script>

<!-- Add Trigger(s) Button -->
<button type="button" onclick="addSelectedTriggers()" class="btn btn-primary">Add Trigger(s)</button>




    <!-- Emotion Form -->
<form method="post" action="/record" onsubmit="return validateForm()">


<!-- Select current date and time -->
<div class="input-group mb-3">
    <label class="form-label" style="font-weight: bolder;">Select current date and time:</label>
    <div class="input-group">
        <input type="text" class="form-control" id="datetimePicker" name="datetimePicker" required />
        <div class="input-group-text" onclick="$('#datetimePicker').focus();">
            <i class="far fa-calendar-alt"></i>
        </div>
    </div>

    <!-- Validation Error Message for Date and Time -->
    <div id="datetimeError" style="color: red;"></div>
</div>

<!-- Submit Button -->
<button type="button" class="btn btn-primary" onclick="validateAndSubmit()">Add snapshot</button>

<script>
    function validateAndSubmit() {
        // Get the validation error div for date and time
        const datetimeErrorDiv = document.getElementById('datetimeError');

        // Check if a date is selected
        const datetimePicker = document.getElementById('datetimePicker');
        if (datetimePicker.value.trim() === '') {
            datetimeErrorDiv.textContent = 'Please select a date and time.';
            return;
        }

        // Clear any previous validation error
        datetimeErrorDiv.textContent = '';

        // Check if emotion levels are provided (you may customize this based on your requirements)
        const emotionLevels = ['enjoymentLevel', 'sadnessLevel', 'angerLevel', 'contemptLevel', 'disgustLevel', 'fearLevel', 'surpriseLevel'];
        for (const level of emotionLevels) {
            const levelInput = document.getElementById(level);
            if (levelInput.value.trim() === '') {
                alert(`Please provide an emotion level for ${level}.`);
                return;
            }
        }

        // If all validations pass, submit the form
        document.querySelector('form').submit();
    }

    flatpickr("#datetimePicker", {
        enableTime: true,
        dateFormat: "Y-m-d H:i",
    });

</script>


</body>

</html>









